generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  username       String    @unique
  hashedPassword Bytes
  session        Session[]

  accounts     Account[]
  categories   Category[]
  transactions Transaction[]
}

model Session {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  expiresAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Transaction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  store  String
  notes  String?
  date   DateTime @default(now())
  amount Decimal  @default(0) @db.Decimal(9, 2)

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  account   Account @relation(fields: [accountId], references: [id])
  accountId String

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Account {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  transactions Transaction[]

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([userId, name])
}

model Category {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  transaction Transaction[]

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([userId, name])
}
